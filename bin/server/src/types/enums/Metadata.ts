export const MetadataFlags = {
	OnFire: 1n << 0n,
	Sneaking: 1n << 1n,
	Riding: 1n << 2n,
	Sprinting: 1n << 3n,
	Action: 1n << 4n,
	Invisible: 1n << 5n,
	Tempted: 1n << 6n,
	InLove: 1n << 7n,
	Saddled: 1n << 8n,
	Powered: 1n << 9n,
	Ignited: 1n << 10n,
	Baby: 1n << 11n,
	Converting: 1n << 12n,
	Critical: 1n << 13n,
	CanShowNametag: 1n << 14n,
	AlwaysShowNametag: 1n << 15n,
	NoAI: 1n << 16n,
	Silent: 1n << 17n,
	WallClimbing: 1n << 18n,
	CanClimb: 1n << 19n,
	Swimmer: 1n << 20n,
	CanFly: 1n << 21n,
	Walker: 1n << 22n,
	Resting: 1n << 23n,
	Sitting: 1n << 24n,
	Angry: 1n << 25n,
	Interested: 1n << 26n,
	Charged: 1n << 27n,
	Tamed: 1n << 28n,
	Orphaned: 1n << 29n,
	Leashed: 1n << 30n,
	Sheared: 1n << 31n,
	Gliding: 1n << 32n,
	Elder: 1n << 33n,
	Moving: 1n << 34n,
	Breathing: 1n << 35n,
	Chested: 1n << 36n,
	Stackable: 1n << 37n,
	ShowBase: 1n << 38n,
	Rearing: 1n << 39n,
	Vibrating: 1n << 40n,
	Idling: 1n << 41n,
	EvokerSpell: 1n << 42n,
	ChargeAttack: 1n << 43n,
	WASDControlled: 1n << 44n,
	CanPowerJump: 1n << 45n,
	CanDash: 1n << 46n,
	Linger: 1n << 47n,
	HasCollision: 1n << 48n,
	AffectedByGravity: 1n << 49n,
	FireImmune: 1n << 50n,
	Dancing: 1n << 51n,
	Enchanted: 1n << 52n,
	ShowTridentRope: 1n << 53n, // Trident show an animated rope when enchanted with loyalty after they are thrown and return to their owner. To be combined with data_owner_eid.
	ContainerPrivate: 1n << 54n, 
	Transforming: 1n << 55n,
	SpinAttack: 1n << 56n,
	Swimming: 1n << 57n,
	Bribed: 1n << 58n, // Dolphins have this set when they go to find treasure for the player.
	Pregnant: 1n << 59n,
	LayingEgg: 1n << 60n,
	RiderCanPick: 1n << 61n,
	TransitionSitting: 1n << 62n,
	Eating: 1n << 63n,
	LayingDown: 1n << 64n,
};

export enum MetadataKey {
	Flags,
	Health,
	Variant,
	Color,
	Nametag,
	OwnerEID,
	TargetEID,
	Air,
	PotionColor,
	PotionAmbient,
	JumpDuration,
	HurtTime,
	HurtDirection,
	PaddleTimeLeft,
	PaddleTimeRight,
	ExperienceValue,
	MinecartDisplayBlock,
	MinecartDisplayOffset,
	MinecartHasDisplay,
	OldSwell = 20,
	SwellDir,
	ChargeAmount,
	EndermanHeldRuntimeID,
	EntityAge,
	PlayerFlags = 26,
	PlayerIndex,
	PlayerBedPositionBlockCoords,
	FireballPowerX,
	FireballPowerY,
	FireballPowerZ,
	AuxPower,
	FishX,
	FishZ,
	FishAngle,
	PotionAuxValue,
	LeadHolderEID,
	Scale,
	InteractiveTag,
	NPCSkinID,
	URLTag,
	MaxAirDataMaxAir,
	MarkVariant,
	ContainerType,
	ContainerBaseSize,
	ContainerExtraSlotsPerStrength,
	BlockTarget,
	WitherInvulnerableTicks,
	WitherTarget1,
	WitherTarget2,
	WitherTarget3,
	AerialAttack,
	BoundingBoxWidth,
	BoundingBoxHeight,
	FuseLength,
	RiderSeatPositionVector3F,
	RiderRotationLocked,
	RiderMaxRotation,
	RiderMinRotation,
	RiderRotationOffset,
	AreaEffectCloudRadius,
	AreaEffectCloudWaiting,
	AreaEffectCloudParticleID,
	ShulkerPeekID,
	ShulkerAttachFace,
	ShulkerAttached,
	ShulkerAttachPos,
	TradingPlayerEID,
	TradingCareer,
	HasCommandBlock,
	CommandBlockCommand,
	CommandBlockLastOutput,
	CommandBlockTrackOutput,
	ControllingRiderSeatNumber,
	Strength,
	MaxStrength,
	SpellCastingColor,
	LimitedLife,
	ArmorStandPoseIndex,
	EnderCrystalTimeOffset,
	AlwaysShowNametag,
	Color2,
	NameAuthor,
	ScoreTag,
	BalloonAttachedEntity,
	PufferfishSize,
	BubbleTime,
	Agent,
	SittingAmount,
	SittingAmountPrevious,
	EatingCounter,
	FlagsExtended,
	LayingAmount,
	LayingAmountPrevious,
	Duration,
	SpawnTime,
	ChangeRate,
	ChangeOnPickup,
	PickupCount,
	InteractText,
	TradeTier,
	MaxTradeTier,
	TradeExperience,
	SkinID,
	SpawningFrames,
	CommandBlockTickDelay,
	CommandBlockExecuteOnFirstTick,
	AmbientSoundInterval,
	AmbientSoundIntervalRange,
	AmbientSoundEventName,
	FallDamageMultiplier,
	NameRawText,
	CanRideTarget,
	LowTierCuredDiscount,
	HighTierCuredDiscount,
	NearbyCuredDiscount,
	NearbyCuredDiscountTimestamp,
	Hitbox,
	IsBuoyant,
	BaseRuntimeID,
	FreezingEffectStrength,
	BuoyancyData,
	GoatHornCount,
	UpdateProperties,
	MovementSoundDistanceOffset,
	HeartbeatIntervalTicks,
	HeartbeatSoundEvent,
	PlayerLastDeathPosition,
	PlayerLastDeathDimension,
	PlayerHasDied,
	CollisionBox,
}
export enum MetadataType {
	Byte,
	Short,
	Int,
	Float,
	String,
	Compound,
	Vec3i,
	Long,
	Vec3f,
}
